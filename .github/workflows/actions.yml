name: ci

on:
  push:
    # branches:
    #   - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch: # be able to manually trigger a workflow run

env:
  SCALA_NEXT_VERSION: '3.7.0'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['11', '17', '21']
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libuv1-dev libcurl4-openssl-dev
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Mill cache
        uses: actions/cache@v4
        with:
          path: ~/.mill
          key: mill-${{ hashFiles('.mill-version') }}
      - name: Ivy cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/coursier
          key: ivy-${{ hashFiles('build.mill') }}
          restore-keys: |
            ivy-${{ hashFiles('build.mill') }}
            ivy
      - name: Compilation cache
        uses: actions/cache@v4
        with:
          path: ./out
          key: out

      - name: Run tests
        run: ./mill -i -DscalaNextVersion=${{ env.SCALA_NEXT_VERSION }} __.publishArtifacts + __.test

  publish-sonatype:
    if: github.repository == 'lqhuang/scala-native-http' && contains(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    env:
      SONATYPE_PGP_PRIVATE_KEY: ${{ secrets.SONATYPE_PGP_PRIVATE_KEY }}
      SONATYPE_PGP_PRIVATE_KEY_PASSWORD: ${{ secrets.SONATYPE_PGP_PRIVATE_KEY_PASSWORD }}
      SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
      SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      LANG: 'en_US.UTF-8'
      LC_MESSAGES: 'en_US.UTF-8'
      LC_ALL: 'en_US.UTF-8'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Mill cache
        uses: actions/cache@v2
        with:
          path: ~/.mill
          key: mill-${{ hashFiles('.mill-version') }}
      - name: Ivy cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/coursier
          key: ivy-${{ hashFiles('build.mill') }}
          restore-keys: |
            ivy-${{ hashFiles('build.mill') }}
            ivy
      - name: Compilation cache
        uses: actions/cache@v2
        with:
          path: ./out
          key: out

      - name: Publish to Maven Central
        run: |
          if [[ $(git tag --points-at HEAD) != '' ]]; then
            echo $SONATYPE_PGP_PRIVATE_KEY | base64 --decode > gpg_key
            gpg --import --no-tty --batch --yes gpg_key
            rm gpg_key
            ./mill -i mill.scalalib.PublishModule/publishAll \
              --sonatypeCreds $SONATYPE_USER:$SONATYPE_PASSWORD \
              --gpgArgs --passphrase=$SONATYPE_PGP_PRIVATE_KEY_PASSWORD,--no-tty,--pinentry-mode,loopback,--batch,--yes,-a,-b \
              --publishArtifacts __.publishArtifacts \
              --readTimeout 600000 \
              --awaitTimeout 600000 \
              --release true \
              --signed true
          fi
      - name: Create GitHub Release
        id: create_gh_release
        # WARN: `actions/create-release` is currently unmaintained. It just works now, keep it until it breaks.
        uses: actions/create-release@v1.1.4
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body:
          draft: false
